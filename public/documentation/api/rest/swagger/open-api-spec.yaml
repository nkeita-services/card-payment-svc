openapi: 3.0.0
info:
  title: Wallet Payment Gateway Service
  version: 0.0.1
  description: |
    Wallet Payment Gateway Service is a REST HTTP API for handling payment. It exposes REST endpoint for

    # Responses

    ## HTTP Response Codes
    | Status Code | Usage                                                       |
    |-------------|-------------------------------------------------------------|
    | 200         | The request completed successfully                          |
    | 201         | A new resource has been created                             |
    | 400         | Malformed request                                           |
    | 401         | Missing access token                                        |
    | 403         | The client does not have permission to access this resource |
    | 404         | Resource not found                                          |
    | 405         | Method not supported                                        |
    | 500         | Internal server error                                       |
    | 503         | Service unvailable                                          |

    ## Errors
    whenever an error occured within the platform, an error response that describes the problem will be returned

    | Field Name        | Field Description     |
    |-------------------|-----------------------|
    | Status            | "fail" or "error"     |
    | StatusCode        | A business error code |
    | StatusDescription | Error description     |

    ## Error codes

    | Error Code | Error Description                                |
    |------------|--------------------------------------------------|
    | 10001      | Cash In request registered                       |

    # Changelog

    ## 2019-11-05
    * Created .....

    # Useful links
  termsOfService: 'http://swagger.io/terms/'
  x-logo:
    url: '/img/NBK_logo.jpeg'
    backgroundColor: '#FFFFFF'
    altText: NBK Logo
servers:
  - url: 'https://wallet-payment-svc-x6fr3lwlgq-nw.a.run.app/'
    description: Testing Server
  - url: 'http://localhost:8099'
    description: Local Server
tags:
  - name: Stripe Integration
    description: Uses Stripe API
  - name: MTN Integration
    description: MTN Integration
  - name: Paypal Integration
    description: Uses Paypal API
  - name: Alipay Integration
    description: Uses EasyEuro API
  - name: Wechat Integration
    description: Uses EasyEuro API
  - name: Wechat & Alipay Integration
    description: Wechat & Alipay Integration
  - name: CashIn Information
    description: CashIn Information


paths:
  /v1/stripe/payments/form/{amount}/{currency}/{accountId}/{userId}:
    get:
      summary: Return a form
      tags:
        - Stripe Integration
      security:
        - oAuth2:
            - StripeCreatePaymentIntent
      parameters:
        - name: amount
          in: path
          required: true
          schema:
            type: number
            description: amount to top up
            example: 12
        - name: currency
          in: path
          required: true
          schema:
            type: string
            description: Currency
            example: USD
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account to top up
            example: 5e6e9889f5aae9439c41757b
        - name: userId
          in: path
          required: true
          schema:
            type: string
            description: Account owner
            example: ui6e9889f5aae9439c41757f
      responses:
        '200':
          description: Successfully obtained card payment form
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Error when obtaining card payment form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4001
                statusDescription: Error when obtaining card payment form
  /v1/stripe/payments/intents/{accountId}:
    post:
      summary: Create a payment intent
      tags:
        - Stripe Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Payment Intent
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/StripeCashInResponse'
        '500':
          description: Error when creating payment intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment intent
  /v1/mtn/payments/accounts/{accountId}/cash-out:
    post:
      summary: Create a cash out transaction
      tags:
        - MTN Integration
      security:
        - oAuth2:
            - MTNCashOut
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Cash Out Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutRequest'
      responses:
        '201':
          description: Successfully created cash out request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
  /v1/mtn/payments/transactions/{transactionId}/cash-out:
    get:
      summary: Return transfer status
      tags:
        - MTN Integration
      security:
        - oAuth2:
            - MTNTransferGetStatus
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            description: Transaction ID
            example: ui6e9889f5aae9439c41757f
      responses:
        '200':
          description: Successfully fetched transfer status
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashOut:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: 5e95b31b3a480d75ac0aa204
                          status:
                            type: string
                            enum:
                              - pending
                              - successful
                              - error
  /v1/mtn/payments/update-wallet-accounts/cash-out:
    get:
      summary: Settle Cash Out Operations
      tags:
        - MTN Integration
      responses:
        '200':
          description: Successfully updated wallet accounts
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      WalletAccounts:
                        type: array
                        items:
                          type: object
                          properties:
                            accountId:
                              type: string
                              example: 5e95b31b3a480d75ac0aa204
  /v1/mtn/payments/update-wallet-accounts/cash-in:
    get:
      summary: Settle Cash In Operations
      tags:
        - MTN Integration
      responses:
        '200':
          description: Successfully updated wallet accounts
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      WalletAccounts:
                        type: array
                        items:
                          type: object
                          properties:
                            accountId:
                              type: string
                              example: 5e95b31b3a480d75ac0aa204
  /v1/mtn/payments/transactions/{transactionId}/cash-in:
    get:
      summary: Return a request to pay status
      tags:
        - MTN Integration
      security:
        - oAuth2:
            - MTNRequestToPayGetStatus
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            description: Transaction ID
            example: ui6e9889f5aae9439c41757f
      responses:
        '200':
          description: Successfully fetched request to pay status
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: 5e95b31b3a480d75ac0aa204
                          status:
                            type: string
                            enum:
                              - pending
                              - successful
                              - error
  /v1/mtn/payments/accounts/{accountId}/cash-in:
    post:
      summary: Create a MTN cash in transaction
      tags:
        - MTN Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Cash In Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInRequest'
      responses:
        '201':
          description: Successfully created cash in request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: 5e95b31b3a480d75ac0aa204
                          status:
                            type: string
                            enum:
                              - pending
                              - successful
                              - error
  /v1/paypal/payments/form/{amount}/{currency}/{accountId}/{userId}:
    get:
      summary: Return a form
      tags:
        - Paypal Integration
      security:
        - oAuth2:
            - PaypalCreateOrderPayment
      parameters:
        - name: amount
          in: path
          required: true
          schema:
            type: number
            description: amount to top up
            example: 12
        - name: currency
          in: path
          required: true
          schema:
            type: string
            description: Currency
            example: USD
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account to top up
            example: 5e6e9889f5aae9439c41757b
        - name: userId
          in: path
          required: true
          schema:
            type: string
            description: UserId to top up
            example: 5e6bf1567127a743ad93e3b2
      responses:
        '200':
          description: Successfully obtained creating an order payment form
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Error when obtaining creating an order payment form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4001
                statusDescription: Error when obtaining creating an order payment payment form
  /v1/paypal/payments/execute/{accountId}:
    post:
      summary: Create an order payment
      tags:
        - Paypal Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaypalRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/PaypalCashInResponse'
        '500':
          description: Error when creating order payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating order payment

  /v1/alipay/collecting-qr-code/payments/execute/{accountId}:
    post:
      summary: Create payment order to connect Alipay for online payment service
      tags:
        - Alipay Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/PaymentOrderResponse'
        '500':
          description: Error when creating order payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/alipay/wap-pay/payments/execute/{accountId}:
    post:
      summary: Create payment order to integrate payment api in alipay App payment
      tags:
        - Alipay Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/AlipayCashInResponse'
        '500':
          description: Error when creating order payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/wechat/collecting-qr-code/payments/execute/{accountId}:
    post:
      summary: Create payment order to connect Wechat pay for online payment service
      tags:
        - Wechat Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/PaymentOrderResponse'
        '500':
          description: Error when creating  payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/wechat/account-pay/payments/execute/{accountId}:
    post:
      summary: Create payment order to integrate payment api in Wechat service accounts.
      tags:
        - Wechat Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WechatAccountPaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/WechatCashInResponse'
        '500':
          description: Error when creating  payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/wechat/app-pay/payments/execute/{accountId}:
    post:
      summary: Create payment order to integrate payment api in wechat App payment
      tags:
        - Wechat Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WechatAppPaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/WechatCashInResponse'
        '500':
          description: Error when creating  payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/alipay-wechatpay/payments/execute/{accountId}/payment-type/{paymentMean}:
    post:
      summary: Create payment order to connect Wechat pay for online payment service
      tags:
        - Wechat & Alipay Integration
      security:
        - oAuth2:
            - MTNCashIn
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: 5e6e9889f5aae9439c41757b
        - name: paymentMean
          in: path
          required: true
          schema:
            type: string
            description: paymentMean
            example: 'Alipay'
      requestBody:
        description: Create Order for Payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCollectingQRPaymentOrderRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/PaymentOrderResponse'
        '500':
          description: Error when creating  payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment order
  /v1/cash-ins/eventType/{eventType}/eventId/{eventId}:
    get:
      summary: Return a cash in information
      tags:
        - CashIn Information
      security:
        - oAuth2:
            - CashInRead
      parameters:
        - name: eventType
          in: path
          required: true
          schema:
            type: string
            description: Event type
            enum:
              - CAPTURE
              - TOPUP
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            description: Event ID
      responses:
        '200':
          description: Successfully fetched cash in information
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: 5e95b31b3a480d75ac0aa204
                          status:
                            type: string
                            enum:
                              - pending
                              - successful
                              - error
  /v1/cash-ins/events/topUp/{transactionId}/fees:
    get:
      summary: Return fees associated to a cash in operation
      tags:
        - CashIn Information
      security:
        - oAuth2:
            - CashInRead
      parameters:
        - name: transactionId
          in: path
          required: true
          example: 0WP58559F5302133R
          schema:
            type: string
            description: transaction ID associated to top up operation
      responses:
        '200':
          description: Successfully fetched fees information
          content:
            text/html:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      Fees:
                        $ref: '#/components/schemas/TopUpFees'
components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: This API uses OAuth 2 with the client credentials grant flow
      flows:
        clientCredentials:
          tokenUrl: https://nbk-wallet.auth.eu-west-1.amazoncognito.com/oauth2/token
          scopes:
            PaypalCreateOrderPayment: Create a Paypal order fo payment
            StripeCreatePaymentIntent: Create a Stripe Payment Intent
            MTNCashIn: MTN Cash In
            MTNCashOut: MTN Cash out
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - fail
        - error
    ErrorResponseStatus:
      type: string
      enum:
        - fail
        - error
    ResponseStatusCode:
      type: number
      example: 1023
    ResponseStatusDescription:
      type: string
      example: wallet event does not exist within the system
    ErrorResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ErrorResponseStatus'
        statusCode:
          $ref: '#/components/schemas/ResponseStatusCode'
        statusDescription:
          $ref: '#/components/schemas/ResponseStatusDescription'
    CashOutRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/CashInRequestType'
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        regions:
          $ref: '#/components/schemas/Regions'
    CashInRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/CashInRequestType'
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
    Originator:
      type: object
      properties:
        originatorType:
          type: string
          enum:
            - User
            - Process
        originatorId:
          type: string
          example: 5e6bf1567127a743ad93e3b2
    StripeCashInResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        extras:
          type: object
          properties:
            clientSecret:
              type: string
              description: client secret
              example: pi_1GUXqnI7cAZaA1PNcmH7sYhO_secret_PIX3t9agUEFjSTtmcPU0EtnJu
            publishableKey:
              type: string
              description: Stripe plublishabe key
              example: pk_test_muG8jSMNY9OyPOQFCN3JtYMx00w4hXalgG
    PaypalRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          type: string
          example: PAYPAL
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
    PaypalCashInResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        amount:
          $ref: '#/components/schemas/Amount'
        status:
          type: string
          example: pending
        extras:
          type: object
          properties:
            approveUrl:
              type: string
              description: Approve Url
              example: https://www.sandbox.paypal.com/checkoutnow?token=6LS64528XG914772C
            orderId:
              type: string
              description: Oerder Identifiant
              example: 6LS64528XG914772C
            payerID:
              type: string
              description: Payer Identifiant
              example: U7AFM93EDQUMY
    PaymentOrderRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          type: string
          enum:
            - Alipay
            - WechatPay
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
        mch_id:
          $ref: '#/components/schemas/MchId'
        key:
          $ref: '#/components/schemas/Key'
        body:
          $ref: '#/components/schemas/Body'
        mch_create_ip:
          $ref: '#/components/schemas/MchCreateIp'
        notify_url:
          $ref: '#/components/schemas/NotifyUrl'
    WechatAccountPaymentOrderRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          type: string
          example: WechatPay
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
        mch_id:
          $ref: '#/components/schemas/MchId'
        key:
          $ref: '#/components/schemas/Key'
        body:
          $ref: '#/components/schemas/Body'
        mch_create_ip:
          $ref: '#/components/schemas/MchCreateIp'
        notify_url:
          $ref: '#/components/schemas/NotifyUrl'
        sub_openid:
          $ref: '#/components/schemas/SubOpenId'
        sub_appid:
          $ref: '#/components/schemas/SubAppId'
    WechatAppPaymentOrderRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          type: string
          example: WechatPay
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
        mch_id:
          $ref: '#/components/schemas/MchId'
        key:
          $ref: '#/components/schemas/Key'
        body:
          $ref: '#/components/schemas/Body'
        mch_create_ip:
          $ref: '#/components/schemas/MchCreateIp'
        notify_url:
          $ref: '#/components/schemas/NotifyUrl'
        appid:
          $ref: '#/components/schemas/AppId'
    BusinessCollectingQRPaymentOrderRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        originator:
          $ref: '#/components/schemas/Originator'
        description:
          $ref: '#/components/schemas/Description'
        regions:
          $ref: '#/components/schemas/Regions'
        mch_id:
          $ref: '#/components/schemas/MchId'
        key:
          $ref: '#/components/schemas/Key'
        body:
          $ref: '#/components/schemas/Body'
        mch_create_ip:
          $ref: '#/components/schemas/MchCreateIp'
        notify_url:
          $ref: '#/components/schemas/NotifyUrl'
        auth_code:
          $ref: '#/components/schemas/AuthCode'
    PaymentOrderResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        amount:
          $ref: '#/components/schemas/Amount'
        status:
          type: string
          example: pending
        extras:
          type: object
          properties:
            appid:
              type: string
              description: appid
              example: 165be82cdb736221cf55e6b2f75ef7d35
            charset:
              type: string
              description: Fixed :UTF-8
              example: UTF-8
            code_img_url:
              type: string
              description: URL of QR code image
              example: https://pay.wepayez.com/pay/qrcode?uuid=https%3A%2F%2Fqr.alipay.com%2Fbax07020tmyfr4wojf5s80a0&s=078d89af7b3c7a7e329cefebe8574f05'
            code_url:
              type: string
              description: QR code in text format, merchant systems can encode the value to be QRcode image
              example: https://qr.alipay.com/bax07020tmyfr4wojf5s80a0
            mch_id:
              type: string
              description: Unique merchant id allocated by EasyEuro
              example: 127590000059
            nonce_str:
              type: string
              description: Random string, less than 32 characters
              example: YFAqERsJuOTGUUrL
            result_code:
              type: string
              description: Request status 0 – success
              example: 0
            sign:
              type: string
              description: Message sigature
              example: 1032CA9F0877777150B0EDE6A79DEBF3
            sign_type:
              type: string
              description: Fixed:MD5
              example: :MD5
            status:
              type: string
              description: 0 – success
              example: 0
            uuid:
              type: string
              description: uuid
              example: 165be82cdb736221cf55e6b2f75ef7d35
            version:
              type: string
              description: Default 2.0
              example: 2.0
    AlipayCashInResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        amount:
          $ref: '#/components/schemas/Amount'
        status:
          type: string
          example: pending
    WechatCashInResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        amount:
          $ref: '#/components/schemas/Amount'
        status:
          type: string
          example: pending
    Currency:
      type: string
      description: Currency
      enum:
        - EUR
        - USD
        - GBP
    CashInRequestType:
      type: string
      enum:
        - MTN
        - STRIPE
        - PAYPAL
        - OrangeMoney
        - BankAccount
    Amount:
      type: number
      description: amount to cash out
      example: 20
    Description:
      type: string
      description: transaction description
      example: Top Up
    Regions:
      type: array
      items:
        type: string
        example: 5e99a07063389569485205f3
    ApplicationContext:
      type: object
      properties:
        successUrl:
          type: string
          description: Success Url
          example: https://your-domain/sucsess
        cancelOrFailUrl:
          type: string
          description: Cancel or fail Url
          example: https://your-domain/cancel
    TopUpFees:
      type: object
      properties:
        amount:
          type: string
          example: 10.2
    MchId:
      type: string
      description: Unique merchant id allocated by EasyEuro merchant account
      example: "157590000059"
    Key:
      type: string
      description: Signature key
      example: "32bf86746b7a8258a174c728c17d3de4"
    Body:
      type: string
      description: Product/service
      example: "Iphone"
    MchCreateIp:
      type: string
      description: IP address of the merchant system (client)
      example: "127.0.0.1"
    AppId:
      type: string
      description: Merchant APP corresponding to WeChat open platform mobile app APPID
      example: "9875746b7a8258a174c728c1"
    AuthCode:
      type: string
      description: Signature key
      example: "64316746b7a8258a174c72"
    SubOpenId:
      type: string
      description: The openId corresponding to the merchant Official Account that WeChat users follow（
      example: "347846b7a8258a174c728c17d"
    SubAppId:
      type: string
      description: WeChat Official Account Platform AppID
      example: "746b7a8258a174c728c17d3de"
    NotifyUrl:
      type: string
      description: Callback url provided by merchant system to receive asynchronous notification of payment result from EasyEuro platform.
        Less than 255 characters ， URL format as http://wap.tenpay.com/tenpay.asp ,can be accessed from public network
      example: "https://domain/notify"
