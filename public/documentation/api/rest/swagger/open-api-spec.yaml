openapi: 3.0.0
info:
  title: Wallet Payment Gateway Service
  version: 0.0.1
  description: |
    Wallet Payment Gateway Service is a REST HTTP API for handling payment. It exposes REST endpoint for

    # Responses

    ## HTTP Response Codes
    | Status Code | Usage                                                       |
    |-------------|-------------------------------------------------------------|
    | 200         | The request completed successfully                          |
    | 201         | A new resource has been created                             |
    | 400         | Malformed request                                           |
    | 401         | Missing access token                                        |
    | 403         | The client does not have permission to access this resource |
    | 404         | Resource not found                                          |
    | 405         | Method not supported                                        |
    | 500         | Internal server error                                       |
    | 503         | Service unvailable                                          |

    ## Errors
    whenever an error occured within the platform, an error response that describes the problem will be returned

    | Field Name        | Field Description     |
    |-------------------|-----------------------|
    | Status            | "fail" or "error"     |
    | StatusCode        | A business error code |
    | StatusDescription | Error description     |

    ## Error codes

    | Error Code | Error Description                                |
    |------------|--------------------------------------------------|
    | 10001      | Cash In request registered                       |

    # Changelog

    ## 2019-11-05
    * Created .....

    # Useful links
  termsOfService: 'http://swagger.io/terms/'
  x-logo:
    url: '/static/img/NBK_logo.jpeg'
    backgroundColor: '#FFFFFF'
    altText: NBK Logo
servers:
  - url: 'https://wallet-payment-svc-fjhmnd5asa-ew.a.run.app'
    description: Testing Server
tags:
  - name: Stripe Integration
    description: Uses Stripe API
    externalDocs:
      url: 'https://wallet-payment-svc-fjhmnd5asa-ew.a.run.app'
  - name: Cash Out
    description: Cash Out
  - name: Cash In
    description: Cash In
paths:
  /v1/stripe/payments/form/{amount}/{currency}/{accountId}:
    get:
      summary: Return a form
      tags:
        - Stripe Integration
      parameters:
        - name: amount
          in: path
          required: true
          schema:
            type: number
            description: amount to top up
            example: 12
        - name: currency
          in: path
          required: true
          schema:
            type: string
            description: Currency
            example: USD
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account to top up
            example: 45466ea6-512d-42c7-b57f-d11c53890456
      responses:
        '200':
          description: Successfully obtained card payment form
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Error when obtaining card payment form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4001
                statusDescription: Error when obtaining card payment form
  /v1/stripe/payments/intents:
    post:
      summary: Create a payment intent
      tags:
        - Stripe Integration
      requestBody:
        description: Payment Intent
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInRequest'
      responses:
        '201':
          description: Successfully created payment intent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        $ref: '#/components/schemas/StripeCashInResponse'
        '500':
          description: Error when creating payment intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: fail
                statusCode: 4010
                statusDescription: Error when creating payment intent
  /v1/payments/accounts/{accountId}/cash-out/mtn:
    post:
      summary: Create a cash out transaction
      tags:
        - Cash Out
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: af1db7ec-e0a8-4866-b72b-aed49a360ffc
      requestBody:
        description: Cash Out Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutRequest'
      responses:
        '201':
          description: Successfully created cash out request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
  /v1/payments/accounts/{accountId}/cash-in/mtn:
    post:
      summary: Create a MTN cash in transaction
      tags:
        - Cash In
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Wallet Account ID
            example: af1db7ec-e0a8-4866-b72b-aed49a360ffc
      requestBody:
        description: Cash In Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInRequest'
      responses:
        '201':
          description: Successfully created cash in request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/ResponseStatus'
                  data:
                    type: object
                    properties:
                      CashIn:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: 5e95b31b3a480d75ac0aa204
                          status:
                            type: string
                            enum:
                              - pending
                              - successful
                              - error
components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: This API uses OAuth 2 with the client credentials grant flow
      flows:
        clientCredentials:
          tokenUrl: https://nbk-wallet.auth.eu-west-1.amazoncognito.com/oauth2/token
          scopes:
            StripeCreatePaymentIntent: Create a Stripe Payment Intent
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - fail
        - error
    ErrorResponseStatus:
      type: string
      enum:
        - fail
        - error
    ResponseStatusCode:
      type: number
      example: 1023
    ResponseStatusDescription:
      type: string
      example: wallet event does not exist within the system
    ErrorResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ErrorResponseStatus'
        statusCode:
          $ref: '#/components/schemas/ResponseStatusCode'
        statusDescription:
          $ref: '#/components/schemas/ResponseStatusDescription'
    CashOutRequest:
      type: object
      properties:
        amount:
          type: number
          description: amount to cash out
          example: 20
        type:
          type: string
          enum:
            - MTN
            - OrangeMoney
            - BankAccount
        originator:
          $ref: '#/components/schemas/Originator'
    CashInRequest:
      type: object
      properties:
        amount:
          type: number
          description: amount to cash out
          example: 20
        type:
          type: string
          enum:
            - MTN
            - OrangeMoney
            - BankAccount
        currency:
          type: string
          description: Currency
        accountId:
          type: string
          description: account to top up
          example: 45466ea6-512d-42c7-b57f-d11c53890456
        originator:
          $ref: '#/components/schemas/Originator'
    Originator:
      type: object
      properties:
        originatorType:
          type: string
          enum:
            - User
            - Process
        originatorId:
          type: string
          example: 8cd240f3-6d7b-40f3-b0df-37d6e2fc8145
    StripeCashInResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: 5e99a07063389569485205f3
        extras:
          type: object
          properties:
            clientSecret:
              type: string
              description: client secret
              example: pi_1GUXqnI7cAZaA1PNcmH7sYhO_secret_PIX3t9agUEFjSTtmcPU0EtnJu
            publishableKey:
              type: string
              description: Stripe plublishabe key
              example: pk_test_muG8jSMNY9OyPOQFCN3JtYMx00w4hXalgG


